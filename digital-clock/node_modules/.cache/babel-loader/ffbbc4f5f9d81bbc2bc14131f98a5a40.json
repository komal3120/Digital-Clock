{"ast":null,"code":"var _jsxFileName = \"/media/komal/New Volume/ReactJs_Programs/firstapp/src/index.js\";\n// var React = require('react');\n// var ReactDOM =  require('react-dom');\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // React\n// ReactDOM.render(<h1>Hello World!!!...</h1>,document.getElementById('root'));\n// Babel converted output\n// ReactDOM.render( /*#__PURE__*/React.createElement(\"h1\", null, \"Hello World!!!...\"), document.getElementById('root'));\n// // //Pure Javascript\n// // var h1=document.createElement(\"h1\");\n// // h1.innerHTML= \"Komal Pal\";\n// // document.getElementById(\"root\").appendChild(h1);\n// //React Multiple Elements render\n// ReactDOM.render(<div><h1>Hello World!!!...</h1>\n//   <p>By Komal Pal</p>\n//   <h2>JSX Learning</h2></div>\n//   ,document.getElementById('root'));\n// //React Multiple Elements render with return array of elements if react version is above v16\n// ReactDOM.render([<h1>Hello World!!!...</h1>,\n//   <p>By Komal Pal</p>,\n//   <h2>JSX Learning</h2>]\n//   ,document.getElementById('root'));\n// // JS Array Creation\n// // const arr = ['Komal', 'Pal', 'cse']\n// // React Fragments\n// ReactDOM.render(\n//   <React.Fragment>\n//   <h1>Hello World!!!...</h1>,\n//   <p>By Komal Pal</p>,\n//   <h2>JSX Learning</h2>\n//   </React.Fragment>\n//   ,document.getElementById('root'));\n// // or\n// ReactDOM.render(\n//     <>\n//     <h1>Hello World!!!...</h1>\n//     <p>By Komal Pal</p>\n//     <h2>JSX Learning</h2>\n//     </>\n//     ,document.getElementById('root'));\n// React Challenge-1\n// ReactDOM.render(\n//       <>\n//       <h1>Komal Pal</h1>\n//       <p>My Favourite List of Netflix Web Series</p>\n//       <ol>\n//       <li> Dark </li>\n//       <li> Extra Curricular </li>\n//       <li> My Holo Love </li>\n//       <li> My First-2 Love </li>\n//       <li> Mr Robot </li>\n//       </ol>\n//       </>,\n//       document.getElementById('root')\n//       );\n// JSX Expression \n// const fname = \"Komal Pal\";\n// ReactDOM.render(\n//           <>\n//           <h1>My Name Is {fname}</h1>\n//           <p>3+3</p>\n//           <p>{3+3}</p>\n//           <h2>JSX Learning{Math.random()}</h2>\n//           </>,\n//           document.getElementById('root')\n//           );\n// ES6 Template literals in JSX \n// const fname = \"Komal\";\n// const lname = \"pal\";\n// ReactDOM.render(\n//           <>\n//           <h1>My Name Is {fname}{lname}</h1>\n//           <h1>My Name Is {fname} {lname}</h1>\n//           <h1>My Name Is {fname+lname}</h1>\n//           <h1>My Name Is {fname+\" \"+lname}</h1>   \n//           {/* template listeral method */}\n//           <h1>My Name Is {`${fname} ${lname}`}</h1>\n//           <h1>{`My Name Is  ${fname} ${lname}`}</h1>\n//           </>,\n//           document.getElementById('root')\n//           );\n// Challenge-2\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst fname = \"Komal Pal\"; // o/p-only print date not month & year\n// const date = new Date().getDate();\n// o/p- full date\n\nconst date = new Date().toLocaleDateString();\nconst time = new Date().toLocaleTimeString();\nReactDOM.render( /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"My Name Is \", fname, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 1\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Todays Date : \", date]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 1\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Todays Time : \", time]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 1\n  }, this)]\n}, void 0, true), document.getElementById(\"root\"));","map":{"version":3,"sources":["/media/komal/New Volume/ReactJs_Programs/firstapp/src/index.js"],"names":["React","ReactDOM","fname","date","Date","toLocaleDateString","time","toLocaleTimeString","render","document","getElementById"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA,MAAMC,KAAK,GAAG,WAAd,C,CACA;AACA;AAEA;;AACA,MAAMC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,kBAAX,EAAb;AAEA,MAAMC,IAAI,GAAG,IAAIF,IAAJ,GAAWG,kBAAX,EAAb;AAEAN,QAAQ,CAACO,MAAT,eACA;AAAA,0BACA;AAAA,8BAAgBN,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,eAEA;AAAA,iCAAkBC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,UAFA,eAGA;AAAA,iCAAkBG,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,UAHA;AAAA,gBADA,EAMAG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANA","sourcesContent":["// var React = require('react');\n// var ReactDOM =  require('react-dom');\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n// React\n// ReactDOM.render(<h1>Hello World!!!...</h1>,document.getElementById('root'));\n\n// Babel converted output\n// ReactDOM.render( /*#__PURE__*/React.createElement(\"h1\", null, \"Hello World!!!...\"), document.getElementById('root'));\n\n// // //Pure Javascript\n// // var h1=document.createElement(\"h1\");\n// // h1.innerHTML= \"Komal Pal\";\n// // document.getElementById(\"root\").appendChild(h1);\n\n// //React Multiple Elements render\n// ReactDOM.render(<div><h1>Hello World!!!...</h1>\n//   <p>By Komal Pal</p>\n//   <h2>JSX Learning</h2></div>\n//   ,document.getElementById('root'));\n\n// //React Multiple Elements render with return array of elements if react version is above v16\n// ReactDOM.render([<h1>Hello World!!!...</h1>,\n//   <p>By Komal Pal</p>,\n//   <h2>JSX Learning</h2>]\n//   ,document.getElementById('root'));\n\n\n// // JS Array Creation\n// // const arr = ['Komal', 'Pal', 'cse']\n\n// // React Fragments\n// ReactDOM.render(\n//   <React.Fragment>\n//   <h1>Hello World!!!...</h1>,\n//   <p>By Komal Pal</p>,\n//   <h2>JSX Learning</h2>\n//   </React.Fragment>\n//   ,document.getElementById('root'));\n// // or\n// ReactDOM.render(\n//     <>\n//     <h1>Hello World!!!...</h1>\n//     <p>By Komal Pal</p>\n//     <h2>JSX Learning</h2>\n//     </>\n//     ,document.getElementById('root'));\n\n// React Challenge-1\n// ReactDOM.render(\n//       <>\n//       <h1>Komal Pal</h1>\n//       <p>My Favourite List of Netflix Web Series</p>\n//       <ol>\n//       <li> Dark </li>\n//       <li> Extra Curricular </li>\n//       <li> My Holo Love </li>\n//       <li> My First-2 Love </li>\n//       <li> Mr Robot </li>\n//       </ol>\n//       </>,\n//       document.getElementById('root')\n//       );\n  \n\n// JSX Expression \n// const fname = \"Komal Pal\";\n// ReactDOM.render(\n//           <>\n//           <h1>My Name Is {fname}</h1>\n//           <p>3+3</p>\n//           <p>{3+3}</p>\n//           <h2>JSX Learning{Math.random()}</h2>\n//           </>,\n//           document.getElementById('root')\n//           );\n\n// ES6 Template literals in JSX \n// const fname = \"Komal\";\n// const lname = \"pal\";\n// ReactDOM.render(\n//           <>\n//           <h1>My Name Is {fname}{lname}</h1>\n//           <h1>My Name Is {fname} {lname}</h1>\n//           <h1>My Name Is {fname+lname}</h1>\n//           <h1>My Name Is {fname+\" \"+lname}</h1>   \n//           {/* template listeral method */}\n//           <h1>My Name Is {`${fname} ${lname}`}</h1>\n//           <h1>{`My Name Is  ${fname} ${lname}`}</h1>\n//           </>,\n//           document.getElementById('root')\n//           );\n\n// Challenge-2\nconst fname = \"Komal Pal\";\n// o/p-only print date not month & year\n// const date = new Date().getDate();\n\n// o/p- full date\nconst date = new Date().toLocaleDateString();\n\nconst time = new Date().toLocaleTimeString();\n\nReactDOM.render(\n<> \n<h1>My Name Is {fname} </h1>\n<p>Todays Date : {date}</p>\n<p>Todays Time : {time}</p>\n</>,\ndocument.getElementById(\"root\")\n);\n"]},"metadata":{},"sourceType":"module"}